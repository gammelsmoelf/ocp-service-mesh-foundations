apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    app: catalog
    application: catalog
    version: v2
    app.kubernetes.io/part-of: "example-app"

  name: catalog-v2
spec:
  selector:
    matchLabels:
      application: catalog
      deployment: catalog
      version: v2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: catalog
        application: catalog
        deployment: catalog
        version: v2
        app.kubernetes.io/part-of: "example-app"

      # Enable Red Hat Service Mesh's automatic istio sidecar injection
      annotations:
        sidecar.istio.io/inject: "true"

      name: catalog
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace

          image: docker.io/redbowler/echo-server-8080:v2
          ports:
            - containerPort: 8080

          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: catalog
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 500Mi
            requests:
              cpu: 125m
              memory: 500Mi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File